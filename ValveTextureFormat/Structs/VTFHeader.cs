namespace Chisel.Import.Source.VPKTools
{
    [System.Flags]
    public enum VTFImageFlag : uint
    {
        TEXTUREFLAGS_POINTSAMPLE                              = 0x00000001,
        TEXTUREFLAGS_TRILINEAR                                = 0x00000002,
        TEXTUREFLAGS_CLAMPS                                   = 0x00000004,
        TEXTUREFLAGS_CLAMPT                                   = 0x00000008,
        TEXTUREFLAGS_ANISOTROPIC                              = 0x00000010,
        TEXTUREFLAGS_HINT_DXT5                                = 0x00000020,
        TEXTUREFLAGS_SRGB                                     = 0x00000040, // Originally internal to VTex as TEXTUREFLAGS_NOCOMPRESS.
        TEXTUREFLAGS_DEPRECATED_NOCOMPRESS                    = 0x00000040,
        TEXTUREFLAGS_NORMAL                                   = 0x00000080,
        TEXTUREFLAGS_NOMIP                                    = 0x00000100,
        TEXTUREFLAGS_NOLOD                                    = 0x00000200,
        TEXTUREFLAGS_MINMIP                                   = 0x00000400,
        TEXTUREFLAGS_PROCEDURAL                               = 0x00000800,
        TEXTUREFLAGS_ONEBITALPHA                              = 0x00001000, //!< Automatically generated by VTex.
        TEXTUREFLAGS_EIGHTBITALPHA                            = 0x00002000, //!< Automatically generated by VTex.
        TEXTUREFLAGS_ENVMAP                                   = 0x00004000,
        TEXTUREFLAGS_RENDERTARGET                             = 0x00008000,
        TEXTUREFLAGS_DEPTHRENDERTARGET                        = 0x00010000,
        TEXTUREFLAGS_NODEBUGOVERRIDE                          = 0x00020000,
        TEXTUREFLAGS_SINGLECOPY                               = 0x00040000,
        TEXTUREFLAGS_UNUSED0                                  = 0x00080000, //!< Originally internal to VTex as TEXTUREFLAGS_ONEOVERMIPLEVELINALPHA.
        TEXTUREFLAGS_DEPRECATED_ONEOVERMIPLEVELINALPHA        = 0x00080000,
        TEXTUREFLAGS_UNUSED1                                  = 0x00100000, //!< Originally internal to VTex as TEXTUREFLAGS_PREMULTCOLORBYONEOVERMIPLEVEL.
        TEXTUREFLAGS_DEPRECATED_PREMULTCOLORBYONEOVERMIPLEVEL = 0x00100000,
        TEXTUREFLAGS_UNUSED2                                  = 0x00200000, //!< Originally internal to VTex as TEXTUREFLAGS_NORMALTODUDV.
        TEXTUREFLAGS_DEPRECATED_NORMALTODUDV                  = 0x00200000,
        TEXTUREFLAGS_UNUSED3                                  = 0x00400000, //!< Originally internal to VTex as TEXTUREFLAGS_ALPHATESTMIPGENERATION.
        TEXTUREFLAGS_DEPRECATED_ALPHATESTMIPGENERATION        = 0x00400000,
        TEXTUREFLAGS_NODEPTHBUFFER                            = 0x00800000,
        TEXTUREFLAGS_UNUSED4                                  = 0x01000000, //!< Originally internal to VTex as TEXTUREFLAGS_NICEFILTERED.
        TEXTUREFLAGS_DEPRECATED_NICEFILTERED                  = 0x01000000,
        TEXTUREFLAGS_CLAMPU                                   = 0x02000000,
        TEXTUREFLAGS_VERTEXTEXTURE                            = 0x04000000,
        TEXTUREFLAGS_SSBUMP                                   = 0x08000000,
        TEXTUREFLAGS_UNUSED5                                  = 0x10000000, //!< Originally TEXTUREFLAGS_UNFILTERABLE_OK.
        TEXTUREFLAGS_DEPRECATED_UNFILTERABLE_OK               = 0x10000000,
        TEXTUREFLAGS_BORDER                                   = 0x20000000,
        TEXTUREFLAGS_DEPRECATED_SPECVAR_RED                   = 0x40000000,

        //TEXTUREFLAGS_DEPRECATED_SPECVAR_ALPHA = 0x80000000,
        TEXTUREFLAGS_LAST  = 0x20000000,
        TEXTUREFLAGS_COUNT = 30
    }

    struct VTFHeader
    {
        public const int            signature = 0x00465456; // File signature ("VTF\0"). (or as little-endian integer, 0x00465456)
        public       float          version;                // (Sizeof 2) version[0].version[1].
        public       uint           headerSize;             // Size of the header struct (16 byte aligned; currently 80 bytes).
        public       ushort         width;                  // Width of the largest mipmap in pixels. Must be a power of 2.
        public       ushort         height;                 // Height of the largest mipmap in pixels. Must be a power of 2.
        public       VTFImageFlag   flags;                  // VTF flags.
        public       ushort         frames;                 // Number of frames, if animated (1 for no animation).
        public       ushort         firstFrame;             // First frame in animation (0 based).
        public       byte[]         padding0;               // (Sizeof 4) reflectivity padding (16 byte alignment).
        public       float[]        reflectivity;           // (Sizeof 3) reflectivity vector.
        public       byte[]         padding1;               // (Sizeof 4) reflectivity padding (8 byte packing).
        public       float          bumpmapScale;           // Bumpmap scale.
        public       VTFImageFormat highResImageFormat;     // High resolution image format.
        public       byte           mipmapCount;            // Number of mipmaps.
        public       VTFImageFormat lowResImageFormat;      // Low resolution image format (always DXT1).
        public       byte           lowResImageWidth;       // Low resolution image width.
        public       byte           lowResImageHeight;      // Low resolution image height.

        public ushort depth; // Depth of the largest mipmap in pixels. Must be a power of 2. Can be 0 or 1 for a 2D texture (v7.2 only).

        public byte[] padding2;      // (Sizeof 3)
        public uint   resourceCount; // Number of image resources

        public byte[]        padding3;  // (Sizeof 8)
        public VTFResource[] resources; // (Sizeof VTF_RSRC_MAX_DICTIONARY_ENTRIES)
#pragma warning disable CS0649
        public VTFResourceData[] data; // (Sizeof VT_RSRC_MAX_DICTIONARY_ENTRIES)
#pragma warning restore CS0649
    }
}
